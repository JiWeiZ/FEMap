(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{311:function(t,s,i){"use strict";i.r(s);var e=i(0),h=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"详解js对象继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#详解js对象继承"}},[this._v("#")]),this._v(" 详解JS对象继承")]),this._v(" "),s("ol",[s("li",[this._v("ES5的对象继承是基于原型链的，ES5 的继承实质是先创造子类的实例对象this，然后再将父类的方法添加到this上面（Parent.apply(this)）。")]),this._v(" "),s("li",[this._v("ES6 的继承机制完全不同，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。")])])])}],!1,null,null,null);s.default=h.exports}}]);